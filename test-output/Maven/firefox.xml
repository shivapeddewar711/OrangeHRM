<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="SHIVA" failures="0" tests="3" name="firefox" time="7.608" errors="0" timestamp="2023-03-18T18:39:11 IST">
  <testcase classname="Testpakage.Loginclass" name="@BeforeTest beforetest" time="7.409">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line 
Host info: host: &amp;apos;SHIVA&amp;apos;, ip: &amp;apos;192.168.43.172&amp;apos;
Build info: version: &amp;apos;4.8.0&amp;apos;, revision: &amp;apos;267030adea&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line 
Host info: host: 'SHIVA', ip: '192.168.43.172'
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:148)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:106)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:130)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:111)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:101)
at Testpakage.Loginclass.beforetest(Loginclass.java:41)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforetest -->
  <testcase classname="Testpakage.Loginclass" name="@BeforeClass beforeClass" time="-1.679144951199E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="Testpakage.Loginclass" name="@BeforeMethod Beforemethod" time="-1.679144951211E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Beforemethod -->
  <testcase classname="Testpakage.Loginclass" name="@AfterMethod aftermethod" time="-1.679144951238E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Testpakage.Loginclass" name="@BeforeMethod Beforemethod" time="-1.679144951256E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Beforemethod -->
  <testcase classname="Testpakage.Loginclass" name="@AfterMethod aftermethod" time="-1.679144951281E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Testpakage.Loginclass" name="@BeforeMethod Beforemethod" time="-1.679144951293E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Beforemethod -->
  <testcase classname="Testpakage.Loginclass" name="@AfterMethod aftermethod" time="-1.679144951334E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Testpakage.Loginclass" name="@AfterClass afterclass" time="-1.67914495134E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterclass -->
  <testcase classname="Testpakage.Loginclass" name="@AfterTest aftertest" time="-1.679144951355E9">
    <skipped/>
  </testcase> <!-- @AfterTest aftertest -->
  <testcase classname="Testpakage.Loginclass" name="test" time="0.0">
    <skipped/>
  </testcase> <!-- test -->
  <testcase classname="Testpakage.Loginclass" name="test1" time="0.0">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="Testpakage.Loginclass" name="test2" time="0.0">
    <skipped/>
  </testcase> <!-- test2 -->
</testsuite> <!-- firefox -->
